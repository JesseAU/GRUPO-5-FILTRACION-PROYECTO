name: CI

on:
  push:
    branches:
      - main
      - 'interfaz-usuario(diseño)'
      - 'logica-filtro(JS)'
      - 'CI-github-actions'
  pull_request:
    branches:
      - main
      - 'interfaz-usuario(diseño)'
      - 'logica-filtro(JS)'
      - 'CI-github-actions'

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar repositorio
        uses: actions/checkout@v3

      - name: 📂 Verificar existencia de archivos según la rama
        run: |
          # Detectar la rama real (en pull_request usa github.head_ref)
          branch_name="$GITHUB_REF_NAME"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            branch_name="${{ github.head_ref }}"
          fi

          echo "Detectando rama: $branch_name"
          
          if [ "$branch_name" = "main" ]; then
            files="index.html style.css script.js"
          elif [ "$branch_name" = "interfaz-usuario(diseño)" ]; then
            files="index.html style.css"
          elif [ "$branch_name" = "logica-filtro(JS)" ]; then
            files="script.js"
          elif [ "$branch_name" = "CI-github-actions" ]; then
            files="index.html style.css script.js"
          else
            echo "❌ Rama no configurada para validación"
            exit 1
          fi
          
          for file in $files; do
            if [ ! -f "$file" ]; then
              echo "❌ Falta el archivo $file"
              exit 1
            fi
          done
          echo "✅ Archivos requeridos encontrados."

      - name: 🔍 Validar HTML
        if: ${{ github.ref_name == 'main' || github.ref_name == 'interfaz-usuario(diseño)' || github.ref_name == 'CI-github-actions' }}
        run: |
          echo "Validando HTML..."
          npm install -g htmlhint
          htmlhint index.html

      - name: 🎨 Validar CSS (con archivo temporal)
        if: ${{ github.ref_name == 'main' || github.ref_name == 'interfaz-usuario(diseño)' || github.ref_name == 'CI-github-actions' }}
        run: |
          echo "Validando CSS..."
          npm install -g stylelint stylelint-config-standard
          echo '{ "extends": "stylelint-config-standard", "rules": { "block-no-empty": true, "color-no-invalid-hex": true } }' > .stylelintrc.json
          stylelint "style.css"

      - name: 💻 Validar JS (compatible ESLint v9+)
        if: ${{ github.ref_name == 'main' || github.ref_name == 'logica-filtro(JS)' || github.ref_name == 'CI-github-actions' }}
        run: |
          echo "Validando JavaScript..."
          npm install -g eslint
          if [ ! -f eslint.config.js ]; then
            echo "Creando eslint.config.js por defecto..."
            echo 'export default [
              {
                rules: {
                  semi: "error",
                  quotes: ["off"]
                }
              }
            ];' > eslint.config.js
          fi
          eslint "script.js"

      - name: 🎉 Mensaje final
        run: echo "🎯 Todo correcto, el código no tiene errores. ¡Buen trabajo grupo 5! 🚀"
